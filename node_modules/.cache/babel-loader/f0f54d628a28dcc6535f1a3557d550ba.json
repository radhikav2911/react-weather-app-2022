{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react-weather-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"d6a1242e4fb7d7b5d17cc1f071627167\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst getCurrentDate = function () {\n  let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n};\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState('New Delhi');\n  const [locationInfo, setLocationInfo] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setLocationInfo(result);\n        setLocation('');\n        console.log(result);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search...\",\n          value: location,\n          onKeyPress: search,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), typeof locationInfo.main != 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [locationInfo.name, \", \", locationInfo.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new Date().toLocaleString() + \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: getCurrentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature\",\n            children: locationInfo.main.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"climate\",\n            children: locationInfo.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"2hW3aNLw1S6lSnNHZju4/XFwFu0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React/react-weather-app/src/App.js"],"names":["useState","useEffect","api","key","base","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","App","location","setLocation","locationInfo","setLocationInfo","search","evt","fetch","then","res","json","result","console","log","e","target","value","main","name","sys","country","toLocaleString","temp","weather"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nconst api = {\n  key: \"d6a1242e4fb7d7b5d17cc1f071627167\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nconst getCurrentDate = (separator = '') => {\n\n  let newDate = new Date()\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`\n}\n\n\n\n\nfunction App() {\n\n  const [location, setLocation] = useState('New Delhi')\n  const [locationInfo, setLocationInfo] = useState({})\n\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setLocationInfo(result);\n          setLocation('');\n          console.log(result);\n        });\n    }\n  }\n\n\n\n\n  return <div className=\"container \">\n    <main>\n      <div className=\"search-box\">\n        <input type=\"text\" className=\"search-input\" placeholder=\"Search...\" value={location} onKeyPress={search} onChange={(e) => setLocation(e.target.value)} />\n      </div>\n      {typeof locationInfo.main != 'undefined' ?\n        (<div>\n          <div className=\"location-box\">\n            <div className=\"location\">{locationInfo.name}, {locationInfo.sys.country}</div>\n            <div className=\"date\">{new Date().toLocaleString() + \"\"}</div>\n            <div className=\"date\">{getCurrentDate}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temperature\">{locationInfo.main.temp}</div>\n            <div className=\"climate\">{locationInfo.weather[0].main}</div>\n          </div>\n        </div>) : (\"\")}\n\n    </main>\n\n\n\n\n  </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}