{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react-weather-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState('New Delhi');\n  const [locationInfo, setLocationInfo] = useState({});\n  useEffect(() => {\n    console.log(location, \"place\");\n    handleFetch();\n  }, []);\n\n  const handleFetch = e => {\n    if (e.key === \"Enter\") {\n      fetch(`http://api.weatherapi.com/v1/current.json?key=bc681ee0e13b4f37b7a110419221802&q=${location}&aqi=no`).then(response => response.json()).then(data => setLocationInfo({\n        name: data.location.name,\n        country: data.location.country,\n        farenheit: {\n          current: data.current.temp_f,\n          high: data.forecast.forecastday[0].day.maxtemp_f,\n          low: data.forecast.forecastday[0].day.mintemp_f\n        },\n        condition: data.current.condition.text\n      }));\n      setLocation(\"\");\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search...\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"place\",\n          children: \"New Delhi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: new Date().toLocaleString() + \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: \"8\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"climate\",\n          children: \"Raining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"jFsJCfkRqCzClipxVMbnXhap7kY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React/react-weather-app/src/App.js"],"names":["useState","useEffect","App","location","setLocation","locationInfo","setLocationInfo","console","log","handleFetch","e","key","fetch","then","response","json","data","name","country","farenheit","current","temp_f","high","forecast","forecastday","day","maxtemp_f","low","mintemp_f","condition","text","target","value","Date","toLocaleString"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,WAAD,CAAxC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsB,OAAtB;AACAM,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAOA,QAAMA,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBC,MAAAA,KAAK,CACF,mFAAkFT,QAAS,SADzF,CAAL,CAGGU,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IACJV,eAAe,CAAC;AACdW,QAAAA,IAAI,EAAED,IAAI,CAACb,QAAL,CAAcc,IADN;AAEdC,QAAAA,OAAO,EAAEF,IAAI,CAACb,QAAL,CAAce,OAFT;AAGdC,QAAAA,SAAS,EAAE;AACTC,UAAAA,OAAO,EAAEJ,IAAI,CAACI,OAAL,CAAaC,MADb;AAETC,UAAAA,IAAI,EAAEN,IAAI,CAACO,QAAL,CAAcC,WAAd,CAA0B,CAA1B,EAA6BC,GAA7B,CAAiCC,SAF9B;AAGTC,UAAAA,GAAG,EAAEX,IAAI,CAACO,QAAL,CAAcC,WAAd,CAA0B,CAA1B,EAA6BC,GAA7B,CAAiCG;AAH7B,SAHG;AAQdC,QAAAA,SAAS,EAAEb,IAAI,CAACI,OAAL,CAAaS,SAAb,CAAuBC;AARpB,OAAD,CALnB;AAiBA1B,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;;AAAA;AACF,GArBD;;AAyBA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACL;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,WAAW,EAAC,WAAxD;AAAoE,UAAA,KAAK,EAAED,QAA3E;AAAqF,UAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACqB,MAAF,CAASC,KAAV;AAAjH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuB,IAAIC,IAAJ,GAAWC,cAAX,KAA8B;AAArD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAsBD;;GA5DQhC,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n\n\n\nfunction App() {\n\n  const [location, setLocation] = useState('New Delhi')\n  const [locationInfo, setLocationInfo] = useState({})\n\n\n  useEffect(() => {\n    console.log(location, \"place\");\n    handleFetch();\n  }, []);\n\n\n\n  const handleFetch = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(\n        `http://api.weatherapi.com/v1/current.json?key=bc681ee0e13b4f37b7a110419221802&q=${location}&aqi=no`\n      )\n        .then((response) => response.json())\n        .then((data) =>\n          setLocationInfo({\n            name: data.location.name,\n            country: data.location.country,\n            farenheit: {\n              current: data.current.temp_f,\n              high: data.forecast.forecastday[0].day.maxtemp_f,\n              low: data.forecast.forecastday[0].day.mintemp_f\n            },\n            condition: data.current.condition.text\n          })\n        );\n\n      setLocation(\"\");\n    };\n  }\n\n\n\n  return <div className=\"container \">\n    <main>\n      <div className=\"search-box\">\n        <input type=\"text\" className=\"search-input\" placeholder=\"Search...\" value={location} onChange={(e) => setLocation(e.target.value)} />\n      </div>\n\n      <div className=\"location-box\">\n        <div className=\"place\">New Delhi</div>\n\n        <div className=\"date\">{new Date().toLocaleString() + \"\"}</div>\n      </div>\n      <div className=\"weather-box\">\n        <div className=\"temperature\">8Â°C</div>\n        <div className=\"climate\">Raining</div>\n      </div>\n\n    </main>\n\n\n\n\n  </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}