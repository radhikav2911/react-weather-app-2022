{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react-weather-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"d6a1242e4fb7d7b5d17cc1f071627167\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState('New Delhi');\n  const [locationInfo, setLocationInfo] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setLocationInfo(result);\n        setLocation('');\n        console.log(result);\n      });\n    }\n  };\n\n  const getCurrentDate = () => {\n    let newDate = new Date();\n    let day = newDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    });\n    let date = newDate.getDate();\n    let month = newDate.toLocaleString('default', {\n      month: 'long'\n    });\n    let year = newDate.getFullYear();\n    return `${day}, ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof locationInfo.main != \"undefined\" ? locationInfo.weather[0].main == \"Clouds\" ? 'container clouds' : 'container' : 'container'(locationInfo.weather[0].main == \"Rain\" ? 'container rain' : 'container'),\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search...\",\n          value: location,\n          onKeyPress: search,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), typeof locationInfo.main != 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [locationInfo.name, \", \", locationInfo.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: getCurrentDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature\",\n            children: [\" \", Math.round(locationInfo.main.temp), \"\\xB0c\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"climate\",\n            children: locationInfo.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"2hW3aNLw1S6lSnNHZju4/XFwFu0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React/react-weather-app/src/App.js"],"names":["useState","useEffect","api","key","base","App","location","setLocation","locationInfo","setLocationInfo","search","evt","fetch","then","res","json","result","console","log","getCurrentDate","newDate","Date","day","toLocaleDateString","weekday","date","getDate","month","toLocaleString","year","getFullYear","main","weather","e","target","value","name","sys","country","Math","round","temp"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;;AACA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAUA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,WAAD,CAAxC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMU,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIA,GAAG,CAACR,GAAJ,KAAY,OAAhB,EAAyB;AACvBS,MAAAA,KAAK,CAAE,GAAEV,GAAG,CAACE,IAAK,aAAYE,QAAS,uBAAsBJ,GAAG,CAACC,GAAI,EAAhE,CAAL,CACGU,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdP,QAAAA,eAAe,CAACO,MAAD,CAAf;AACAT,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OANH;AAOD;AACF,GAVD;;AAYA,QAAMG,cAAc,GAAG,MAAM;AAE3B,QAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAIC,GAAG,GAAGF,OAAO,CAACG,kBAAR,CAA2B,OAA3B,EAAoC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApC,CAAV;AACA,QAAIC,IAAI,GAAGL,OAAO,CAACM,OAAR,EAAX;AACA,QAAIC,KAAK,GAAGP,OAAO,CAACQ,cAAR,CAAuB,SAAvB,EAAkC;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAlC,CAAZ;AACA,QAAIE,IAAI,GAAGT,OAAO,CAACU,WAAR,EAAX;AACA,WAAS,GAAER,GAAI,KAAIG,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAzC;AAED,GATD;;AAcA,sBAAQ;AAAK,IAAA,SAAS,EAAG,OAAOrB,YAAY,CAACuB,IAApB,IAA4B,WAA7B,GACpBvB,YAAY,CAACwB,OAAb,CAAqB,CAArB,EAAwBD,IAAxB,IAAgC,QAAjC,GAA6C,kBAA7C,GAAkE,WAD7C,GAC4D,YAC9EvB,YAAY,CAACwB,OAAb,CAAqB,CAArB,EAAwBD,IAAxB,IAAgC,MAAjC,GAA2C,gBAA3C,GAA8D,WADiB,CAD5E;AAAA,2BAIN;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,WAAW,EAAC,WAAxD;AAAoE,UAAA,KAAK,EAAEzB,QAA3E;AAAqF,UAAA,UAAU,EAAEI,MAAjG;AAAyG,UAAA,QAAQ,EAAGuB,CAAD,IAAO1B,WAAW,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV;AAArI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,OAAO3B,YAAY,CAACuB,IAApB,IAA4B,WAA5B,gBACE;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCAEE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,uBAA2BvB,YAAY,CAAC4B,IAAxC,QAAgD5B,YAAY,CAAC6B,GAAb,CAAiBC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBAAuBnB,cAAc;AAArC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAOC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,4BAA+BoB,IAAI,CAACC,KAAL,CAAWhC,YAAY,CAACuB,IAAb,CAAkBU,IAA7B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,sBAA0BjC,YAAY,CAACwB,OAAb,CAAqB,CAArB,EAAwBD;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,GAYY,EAhBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAJM;AAAA;AAAA;AAAA;AAAA,UAAR;AA6BD;;GA7DQ1B,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nconst api = {\n  key: \"d6a1242e4fb7d7b5d17cc1f071627167\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\n\n\n\n\nfunction App() {\n\n  const [location, setLocation] = useState('New Delhi')\n  const [locationInfo, setLocationInfo] = useState({})\n\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${location}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setLocationInfo(result);\n          setLocation('');\n          console.log(result);\n        });\n    }\n  }\n\n  const getCurrentDate = () => {\n\n    let newDate = new Date()\n    let day = newDate.toLocaleDateString('en-US', { weekday: 'long' })\n    let date = newDate.getDate();\n    let month = newDate.toLocaleString('default', { month: 'long' });\n    let year = newDate.getFullYear();\n    return (`${day}, ${date} ${month} ${year}`)\n\n  }\n\n\n\n\n  return (<div className={(typeof locationInfo.main != \"undefined\") ?\n    ((locationInfo.weather[0].main == \"Clouds\") ? 'container clouds' : 'container') : 'container'\n      ((locationInfo.weather[0].main == \"Rain\") ? 'container rain' : 'container')}>\n\n    <main>\n      <div className=\"search-box\">\n        <input type=\"text\" className=\"search-input\" placeholder=\"Search...\" value={location} onKeyPress={search} onChange={(e) => setLocation(e.target.value)} />\n      </div>\n      {typeof locationInfo.main != 'undefined' ?\n        (<div>\n          <div className=\"location-box\">\n\n            <div className=\"location\">{locationInfo.name}, {locationInfo.sys.country}</div>\n            {/* <div className=\"date\">{new Date().toLocaleString() + \"\"}</div> */}\n            <div className=\"date\">{getCurrentDate()}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temperature\"> {Math.round(locationInfo.main.temp)}Â°c</div>\n            <div className=\"climate\">{locationInfo.weather[0].main}</div>\n          </div>\n        </div>) : (\"\")}\n\n    </main>\n\n\n\n\n\n  </div>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}